<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace 命名空间，作用就是对sql进行分类化管理,理解为sql隔离
 注意：使用mapper代理方法开发，namespace有特殊重要的作用
 -->
<mapper namespace="newb.c.a_spring.backend.sql.dao.UserMapper">
  <resultMap id="UserMap3" type="newb.c.a_spring.backend.sql.model.basemodel.User">
    <!--
      WARNING - @mbggenerated
    -->
    <id column="oid" jdbcType="INTEGER" property="oid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  
  <!-- 在映射文件中配置很多sql语句 -->
    <!--需求:通过id查询用户表的记录 -->
    <!-- 通过select执行数据库查询
     id:标识映射文件中的sql，称为statement的id
     将sql语句封装到mappedStatement对象中，所以将id称为statement的id
     parameterType:指定输入参数的类型
     #{}标示一个占位符,
     #{value}其中value表示接收输入参数的名称，如果输入参数是简单类型，那么#{}中的值可以任意。

     resultType：指定sql输出结果的映射的java对象类型，select指定resultType表示将单条记录映射成java对象
     -->
  <select id="findUserList" resultMap="UserMap3" flushCache="true" useCache="false">
  	select * from user
  </select>
  
  <select id="findUserById" parameterType="int" resultMap="UserMap3" flushCache="true" useCache="false">
  	select * from user where oid=#{id}
  </select>
  
  <select id="findUserByParam" parameterType="newb.c.a_spring.backend.sql.model.UserTrin" resultMap="UserMap3" flushCache="true" useCache="false">
  	select * from user
  	<trim prefix="where" prefixOverrides="AND|OR">
  		<if test="user.oid!=null">
  			and oid=#{user.oid}
  		</if>
  		<if test="user.username!=null">
  			and username like '%${user.username}%'
  		</if>
  		<if test="user.password!=null">
  			and password=#{user.password}
  		</if>
  	</trim>
  </select>
  
  <delete id="delUserById" parameterType="int" flushCache="true">
  	delete from user where oid=#{id}
  </delete>
  
  <update id="updateUserById" parameterType="int" flushCache="true">
  	update user set username='哈哈哈' where oid=#{id}
  </update>
  
  <select id="findUserBySql" resultMap="UserMap3" parameterType="java.lang.String" flushCache="true" useCache="false">
  	${value}
  </select>
  
</mapper>