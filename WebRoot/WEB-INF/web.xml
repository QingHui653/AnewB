<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">
	<display-name>AnewB</display-name>

	<!-- Spring context应用 配置Spring与 mybatis -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:main/resources/spring.xml</param-value>
		<!-- 使用 dubbo service="servlet" 一定要配置在这里，但我这不知道为什么一直报错 -->
		<!-- <param-value>/WEB-INF/classes/main/resources/dubbo/springhighGrade-dubboxRest.xml,classpath*:spring.xml</param-value> -->
		<!-- <param-value>classpath:spring.xml,classpath:spring-mybatis.xml,classpath:spring-cache.xml</param-value> -->
	</context-param>

	<!-- 分布式 session -->
	<!-- <filter>
        <filter-name>springSessionRepositoryFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSessionRepositoryFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> -->

	<!--编码拦截器  -->
	<filter>
		<description>字符集过滤器</description>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<description>字符集编码</description>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- shiro 安全过滤器-->
	<!-- <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping> -->

	<filter>
		<description>druid uri监听</description>
		<filter-name>DruidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
		</init-param>
		<init-param>
			<param-name>profileEnable</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>DruidWebStatFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- <filter>
		<filter-name>logFilter</filter-name>
		<filter-class>newb.c.filter.LogFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->

	<context-param>
         <param-name>logbackConfigLocation</param-name>
         <param-value>classpath:logback.xml</param-value>
	</context-param>
	<listener>
         <listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
	</listener>
	<!-- dubbox REST  使用service="servlet"-->
	<!-- 注意：如果你是用spring的ContextLoaderListener来加载spring，则必须保证BootstrapListener配置在ContextLoaderListener之前，否则dubbo初始化会出错。 -->
	<!-- <listener>
        <listener-class>com.alibaba.dubbo.remoting.http.servlet.BootstrapListener</listener-class>
    </listener> -->

	<!-- spring上下文加载监听器  初始化IOC容器-->
	<listener>
		<description>spring监听器</description>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 防止spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- dubbox REST 使用service="servlet"-->
	<!-- <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>com.alibaba.dubbo.remoting.http.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping> -->
	<!-- proxool 连接池配置 -->
	<!-- <servlet>
		<servlet-name>ServletConfigurator</servlet-name>
		<servlet-class>
			org.logicalcobwebs.proxool.configuration.ServletConfigurator
		</servlet-class>
		<init-param>
			<param-name>xmlFile</param-name>
			<param-value>WEB-INF/proxool.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet> -->

	<!-- activiti 5.16 -->
	<!-- <servlet>
        <servlet-name>RestletServlet</servlet-name>
        <servlet-class>org.restlet.ext.servlet.ServerServlet</servlet-class>
        <init-param>
            <param-name>org.restlet.application</param-name>
            <param-value>org.activiti.rest.editor.application.ModelerRestApplication</param-value>
        </init-param>
    </servlet>
	<servlet-mapping>
		<servlet-name>RestletServlet</servlet-name>
		<url-pattern>/service/*</url-pattern>
	</servlet-mapping> -->

	<servlet>
		<description>自定义的简单的springmvc</description>
		<servlet-name>AnnotationHandleServlet</servlet-name>
		<servlet-class>newb.c.myframework.mvc.annotation.AnnotationHandleServlet</servlet-class>
		<init-param>
			<description>配置要扫描包及其子包, 如果有多个包,以逗号分隔</description>
			<param-name>basePackage</param-name>
			<param-value>newb.c.myframework.mvc</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

    <servlet-mapping>
        <servlet-name>AnnotationHandleServlet</servlet-name>
        <!-- 拦截所有以.action后缀结尾的请求 -->
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>

	<!-- Spring MVC 配置 -->
	<servlet>
		<description>spring mvc servlet</description>
		<servlet-name>rest</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:main/resources/springMVC.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<!-- 开启Cglib 代理 -->
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>rest</servlet-name>
		<!--<url-pattern>/*</url-pattern> 不能使用/*会导致jsp页面无法编译，直接显示源码  -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!-- <servlet-mapping> <servlet-name>rest</servlet-name> <url-pattern>/</url-pattern>
		</servlet-mapping> -->

		<!-- CXF 配置 未启用 -->
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/webservice/*</url-pattern>
	</servlet-mapping>

	<!-- 不拦截这些静态资源   目前使用springmvc标签-->
	<!-- <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>*.html</url-pattern>
    	<url-pattern>*.js</url-pattern>
    	<url-pattern>*.css</url-pattern>
    	<url-pattern>*.png</url-pattern>
    	<url-pattern>*.jpg</url-pattern>
    	<url-pattern>*.gif</url-pattern>
	</servlet-mapping> -->

	<!--Druid 连接池内置监控配置  监控SQL -->
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>

	<!-- 配置session超时时间，单位分钟 -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<!-- welcome  -->
	<welcome-file-list>
		<welcome-file>/web/vue/movieVue.html</welcome-file>
	</welcome-file-list>
	<!-- <error-page>
    	<error-code>404</error-code>
    	<location>/comm/404.jsp</location>
  	</error-page> -->
  	<!-- <error-page>
    	<error-code>500</error-code>
    		<location>/comm/404.html</location>
  	</error-page> -->
</web-app>